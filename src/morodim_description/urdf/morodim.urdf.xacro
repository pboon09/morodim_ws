<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro"
       name="morodim">

  <!-- MiR100 base includes -->
  <xacro:include filename="$(find mir_description)/urdf/include/mir_100_v1.urdf.xacro" />
  <xacro:include filename="$(find mir_description)/urdf/include/common.gazebo.xacro" />
  <xacro:include filename="$(find mir_description)/urdf/include/mir_100.gazebo.xacro" />
  
  <!-- My-robot-to-mono includes -->
  <xacro:include filename="inertial_macros.xacro"/>

  <xacro:arg name="tf_prefix" default="" />

  <!-- prefix can not start with a slash like a global namespace! results in TF errors -->
  <xacro:property name="ns" value="$(arg tf_prefix)" />
  <xacro:if value="${ns == ''}">
    <xacro:property name="prefix" value="" />
  </xacro:if>
  <xacro:unless value="${ns == ''}">
    <xacro:property name="prefix" value="${ns}/" />
  </xacro:unless>

  <!-- MiR 100 Robot (with velocity control) -->
  <xacro:mir_100 prefix="${prefix}" ns="${ns}"/>

  <!-- Use the original MiR differential drive controller -->
  <xacro:diff_controller_plugin_gazebo prefix="${prefix}" ns="${ns}"
    left_wheel_joint="${prefix}left_wheel_joint"
    right_wheel_joint="${prefix}right_wheel_joint"
    wheel_separation="${2*mir_100_act_wheel_dy}"
    wheel_radius="${mir_100_act_wheel_radius}"/>
    
  <!-- My robot (with position control) - attached to the MiR surface -->
  <!-- Links and joints from my-robot-to-mono.xacro -->
  <link name="link_0">
    <visual>
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_0.stl"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_0.stl"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="10.5" x="0.3" y="0.3" z="0.15">
        <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
    </xacro:inertial_box>
  </link>

  <!-- Connection joint between MiR and the robot -->
  <joint name="mir_to_robot_joint" type="fixed">
    <parent link="${prefix}surface"/>
    <child link="link_0"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="link_1">
    <visual>
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_1.stl"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_1.stl"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="10.5" x="0.3" y="0.3" z="0.15">
        <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
    </xacro:inertial_box>
  </link>

  <joint name="joint_1" type="revolute">
    <parent link="link_0"/>
    <child link="link_1"/>
    <origin xyz="0 0 0.2" rpy="0 0 0"/> 
    <axis xyz="0 0 1"/>
    <limit 
      lower="-3.1459" 
      upper="3.1459" 
      velocity="1000.0" 
      effort="1000.0"/>
  </joint>

  <link name="link_2">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 ${-3.14/2}"/> 
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_2.stl"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 ${-3.14/2}"/> 
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_2.stl"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="10.5" x="0.3" y="0.3" z="0.15">
        <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
    </xacro:inertial_box>
  </link>
  
  <joint name="joint_2" type="revolute">
    <parent link="link_1"/>
    <child link="link_2"/>
    <origin xyz="0.0 -0.12 0.0" rpy="${-3.14/2} 0 0"/> 
    <axis xyz="0 0 1"/>
    <limit 
      lower="-3.1459" 
      upper="3.1459" 
      velocity="1000.0" 
      effort="1000.0"/>
  </joint>

  <link name="link_3">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 ${-3.14/2}"/> 
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_3.stl"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 ${-3.14/2}"/> 
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/link_3.stl"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="10.5" x="0.3" y="0.3" z="0.15">
        <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
    </xacro:inertial_box>
  </link>
  
  <joint name="joint_3" type="revolute">
    <parent link="link_2"/>
    <child link="link_3"/>
    <origin xyz="0.0 -0.25 0.1" rpy="0 0 0"/> 
    <axis xyz="0 0 1"/>
    <limit 
      lower="-3.1459" 
      upper="3.1459" 
      velocity="1000.0" 
      effort="1000.0"/>
  </joint>

  <link name="end_effector">
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/> 
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/end_effector.stl"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 ${-3.14/2}"/> 
      <geometry>
        <mesh filename="file:///$(find dummy_description)/meshes/end_effector.stl"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="10.5" x="0.3" y="0.3" z="0.15">
        <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
    </xacro:inertial_box>
  </link>
  
  <joint name="joint_end_effector" type="fixed">
    <parent link="link_3"/>
    <child link="end_effector"/>
    <origin xyz="0.0 -0.28 0.0" rpy="${3.14/2} 0 0"/> 
  </joint>

  <!-- Position control for the robot joints - manipulator only -->
  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <!-- Manipulator joints only - NO wheel joints -->
    <joint name="joint_1">
      <command_interface name="position">
        <param name="min">-3.14</param>
        <param name="max">3.14</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="joint_2">
      <command_interface name="position">
        <param name="min">-3.14</param>
        <param name="max">3.14</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="joint_3">
      <command_interface name="position">
        <param name="min">-3.14</param>
        <param name="max">3.14</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>

  <!-- Gazebo plugin for the robot -->
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <robot_sim_type>gazebo_ros2_control/GazeboSystem</robot_sim_type>
      <parameters>$(find morodim_description)/config/morodim_controllers.yaml</parameters>
    </plugin>
  </gazebo>

  <!-- Gazebo material properties for the robot links -->
  <gazebo reference="link_0">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="link_1">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="link_2">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="link_3">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

</robot>